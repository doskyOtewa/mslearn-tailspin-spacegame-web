trigger:
- '*'
pool: 
  name: Default
variables:
  buildConfig: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  sdkVersion: '6.x'
  nodeVersion: '18.x'
steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(sdkVersion)'
  inputs:
    packageType: sdk
    version: '$(sdkVersion)'
- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '$(nodeVersion)'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'Run npm install with node $(nodeVersion)'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

#- task: gulp@1
 # displayName: 'Run gulp Tasks'
  #inputs:
   # gulpFile: 'gulpfile.js'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project -$(buildConfig)'
  inputs:
   command: 'build'
   arguments: '--no-restore --configuration $(buildConfig)'
   projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfig)'
  inputs:
    command: 'publish'
    project: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfig) --output $(Build.ArtifactStagingDirectory)/$(buildConfig)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()